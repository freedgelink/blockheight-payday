 /*Balances & Distribution*/
    
    function redistribute() internal {
        Balance = address(this).balance;
        if(Balance > ReservedBalance + GasReserve){
        AvailableBalance = Balance - (ReservedBalance + GasReserve);
        }
    } 
    
    function Distribute() internal{
        require(EmployeeCount > 0);
        redistribute();
        require(AvailableBalance > 0);
        uint Payout = AvailableBalance / EmployeeCount;
        for(uint i=1; i <= ID -1; i++) {
            if(_IDnumber[i] >= 1 ){
            _Balance[i] += Payout ;
            }
        }
        ReservedBalance += AvailableBalance;
        AvailableBalance = 0;
    }
    
    /* Test Functions */
      
    function WhatsTheDay() public view returns(uint) {
        return block.number;
    }

    function TestDistribute() public Owned{
        Distribute();
    }
    
    function TestRedistribute() public Owned{
        redistribute();
    }
    
    function ContractBalanceWei() public view returns (uint){
        return address(this).balance;
    }
    
    function TestAvailable_balance() public view returns (uint){
        return(AvailableBalance);
    }

}
